.\" Copyright 2005 by Pablo Yanez Trujillo <pabloy@pcpool.mathematik.uni-freiburg.de
.\" The safe Strings Library Version 0.0.1
.\" 
.\" This is free software. Please read the file ../COPYING if you
.\" want to use/edit/distribuite this source file.
.\" This source file is protected by the GNU GPL-2
.\" NOTE: There is NO  warranty; not even for MERCHANTABILITY or 
.\" FITNESS FOR A PARTICULAR PURPOSE.
.TH "STR2SSTR" "3" "March 2005" "Version 0.0.2" "Linux Programmer's Manual -- Safe Strings Library"
.SH "NAME"
str2sstr - converting strings to "safe strings"
.SH "SYNOPSIS"
.B #include <sstrings.h>
.sp
.BI "char *str2sstr(const char *"string ");"
.SH "DESCRIPTION"
This function takes a 0-terminated string, allocated the needed space and returns a pointer to the new allocated space.
.SS "Returning value"
A pointer to the newly allocated space containing a copy of \fIstring\fR. NULL if malloc fails, in this case ss_errno is set
to SS_NO_MEM.
.SH "NOTES"
You should always proofe that the functions doesn't return NULL. \fIss_errno\fR is declared in the libraray and doesn't need to
be declared by yourself, just use it. Like errno from errno.h you must se it to SS_NO_ERROR by yourself (when SS_NO_ERROR is a posible
value when the returning pointer is NULL).

You must always free you buffers by yourself, don't forget it!

Read \fBsstrings\fR(5) for a list of the constants.
.SH "EXAMPLE"
.RS
.nf
	#include <stdio.h>
	#include <sstrings.h>

	int main(void)
	{
		char* hw;

		hw = str2sstr("Hello World!");

		if(!hw)
		{
			fprintf(stderr, "You don't have enough memory\\n");
			return 1;
		}

		printf("%s\\n", hw); /* output: Hello World! */

		free(hw);

		return 0;
	}
.fi
.RE
.SH "BUGS"
I don't know about any bugs. But I would be very happy to know one if you find one. Please report bugs at
pabloy@pcpool.mathematik.uni-freiburg.de
.SH "SEE ALSO"
.BR appendstring (3)
.BR appendnstring (3)
.BR stringappend (3)
.BR stringnappend (3)
.BR str2sstr (3)
