.\" Copyright 2005 by Pablo Yanez Trujillo <yanezp@informatk.uni-freiburg.de>
.\" The safe Strings Library Version 2.0.1
.\" 
.\" This is free software. Please read the file COPYING if you
.\" want to use/edit/distribuite this source file.
.\" This source file is protected by the GNU GPL-2
.\" NOTE: There is NO  warranty; not even for MERCHANTABILITY or 
.\" FITNESS FOR A PARTICULAR PURPOSE.
.TH "SS_STRING_TRIM" "3" "September 2006" "Version 2.0.1" "Linux Programmer's Manual -- Safe Strings Library"
.SH "NAME"
ss_string_trim, ss_string_ltrim, ss_string_rtrim - deletes leading characters

.SH "SYNOPSIS"
.B #include <sstrings2.h>

.B Linking with -lsstrings2
.sp
.BI "int ss_string_trim(ss_string *"string ", int (*"blank ")(int));"
.br
.BI "int ss_string_ltrim(ss_string *"string ", int (*"blank ")(int));"
.br
.BI "int ss_string_rtrim(ss_string *"string ", int (*"blank ")(int));"

.SH "DESCRIPTON"
\fBss_string_trim\fR deletes all identical leading characters from the beginning and from the end of the string saved in \fIstring\fR.
The characters are determined by the function pointed to by \fIblank\fR. Note that \fIstring\fR must be a valid \fBss_string\fR object
(initialized with \fBss_string_new\fR).

\fBss_string_ltrim\fR deletes all identical leading characters from the left of the string saved in \fIstring\fR.
The characters are determined by the function pointed to by \fIblank\fR. Note that \fIstring\fR must be a valid \fBss_string\fR object
(initialized with \fBss_string_new\fR).

\fBss_string_rtrim\fR deletes all identical leading characters from the right of the string saved in \fIstring\fR.
The characters are determined by the function pointed to by \fIblank\fR. Note that \fIstring\fR must be a valid \fBss_string\fR object
(initialized with \fBss_string_new\fR).

\fIblank\fR returns 1 if the character has to be deleted, 0 otherwise. Please take a look at the example above.

.SS "Returning values"
The functions return 1 on success, 0 otherwise

.SS "Error values for ss_errno"
\fISS_NULL\fR is a parameter is NULL

\fISS_EINVAL\fR if the \fBss_string\fR objects are invalid

.SH "EXAMPLES"
I want to delete all blank spaces (' ', TAB) and new-lines/carriage-return (\\r, \\n)

.RS
.nf
#include <sstrings2.h>
#include <stdio.h>

int space(int c)
{
	switch(c)
	{
		case ' ':
		case '\\n':
		case '\\t':
		case '\\r':
			return 1;
	}
	
	return 0;
}

int main(void)
{
	ss_string *string;

	string = ss_string_new("     \\t\\n     Hello, World     \\n\\n");

	if(!string)
		return 1;

	ss_string_trim(string, space);

	printf("%s\\n", string->str);

	ss_string_free(string, 1);

	return 0;
}
.fi
.RE

.SH "BUGS"
Please send your bug reports to yanezp@informatik.uni-freiburg.de

.SH "SEE ALSO"
.BR ss_string_append (3),
.BR ss_string_append_c_string (3),
.BR ss_string_append_c_string_l (3),
.BR ss_string_new (3)

