.\" Copyright 2005 by Pablo Yanez Trujillo <yanezp@informatk.uni-freiburg.de>
.\" The safe Strings Library Version 2.0.1
.\" 
.\" This is free software. Please read the file COPYING if you
.\" want to use/edit/distribuite this source file.
.\" This source file is protected by the GNU GPL-2
.\" NOTE: There is NO  warranty; not even for MERCHANTABILITY or 
.\" FITNESS FOR A PARTICULAR PURPOSE.
.TH "SS_STRING_REPLACE" "3" "September 2006" "Version 2.0.1" "Linux Programmer's Manual -- Safe Strings Library"
.SH "NAME"
ss_string_replace family - replaces a substring with another one

.SH "SYNOPSIS"
.B #include <sstrings2.h>

.B Linking with -lsstrings2
.sp
.BI "int ss_string_replace(ss_string *"string ", const ss_string *"pattern ", const ss_string *" replace ");"
.br
.BI "int ss_string_replace_c_string(ss_string *"string ", const char *"pattern ", const char *"replace ");"
.br
.BI "int ss_string_replace_c_string_l(ss_string *"string ", const char *"pattern ", size_t "patt_len ", const char *"replace ", size_t "repl_len ");"

.BI "int ss_string_rreplace(ss_string *"string ", const ss_string *"pattern ", const ss_string *"replace ");"
.br
.BI "int ss_string_rreplace_c_string(ss_string *"string ", const char *"pattern ", const char *"replace ");"
.br
.BI "int ss_string_rreplace_c_string_l(ss_string *"string ", const char *"pattern ", size_t "patt_len ", const char *"replace ", size_t "repl_len ");"

.SH "DESCRIPTION"
\fBss_string_replace\fR replaces the \fBfirst\fR occurence of substring \fIpattern\fR in \fIstring\fR with the string saved in \fIreplace\fR. Note
that all parameters must be valid \fBss_string\fR objects (initialized \fBss_string_new\fR),

\fBss_string_replace_c_string\fR replaces \fBfirst\fR occurence of substring \fIpattern\fR in \fIstring\fR with the string \fIreplace\fR.
\fIpattern\fR and \fIreplace\fR are both C-strings. Note that \fIstring\fR must be a valid \fBss_string\fR object.

\fBss_string_replace_c_string_l\fR works like \fBss_string_replace_c_string\fR. \fIpatt_len\fR and \fIrepl_len\fR are the right length of
\fIpattern\fR and \fIstring\fR. Note that this function does not check whether \fIpatt_len\fR and \fIrepl_len\fR are the right length of 
\fIpattern\fR and \fIreplace\fR.

The \fBss_string_rreplace_*\fR functions work the same way but they replace the \fBlast\fR occurence of \fIpattern\fR in \fIstring\fR.

.SS "Returning values"
The functions return 1 on succes, -1 if \fIpattern\fR is not found. They return 0 on error.

.SS "Error value of ss_errno"
\fISS_NULL\fR is a parameter is NULL

\fISS_NOMEM\fR if there is no more memory left

\fISS_EINVAL\fR if the \fBss_string\fR objects are invalid

.SH "BUGS"
Please send your bug reports to yanezp@informatik.uni-freiburg.de

.SH "SEE ALSO"
.BR ss_string_new (3),
.BR ss_string_crop (3),
.BR ss_string_rcrop (3),
.BR ss_string_replace (3),
.BR ss_string_rreplace (3)
